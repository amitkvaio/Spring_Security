spring.application.name=${SPRING_APP_NAME:QSpring_Security_With_GoogleOauth_Saving_Details}
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:INFO}
spring.profiles.active=dev
server.port=8080


# Database Configuration
spring.datasource.url=jdbc:oracle:thin:@//${DATABASE_HOST:localhost}:${DATABASE_PORT:1521}/${DATABASE_NAME:freepdb1}
spring.datasource.username=${DATABASE_USERNAME:system}
spring.datasource.password=${DATABASE_PASSWORD:root}

# JPA Config
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop
 
# Google OAuth2 credentials
spring.security.oauth2.client.registration.google.client-id=517409528662-ktumago8i2a72990vh8vlj6cav5m96hv.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, email, profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo